# Additional sample inputs can be found in `eng/containers/ci.yml`, but here is one here.
# default:
#   - name: test_proxy_linux
#     pool: 'ubuntu-20.04'
#     dockerRepo: 'engsys/testproxy-lin'
#     prepareScript: tools/test-proxy/docker/prepare.ps1
#     dockerFile: 'tools/test-proxy/docker/dockerfile'
#     stableTags:
#       - 'latest'
parameters:
  - name: DockerDeploymentConfig
    type: object
  - name: ImageTag
    type: string
  - name: ContainerRegistry
    type: string
    default: 'azsdkengsys'
  - name: Publish
    type: boolean
    default: true

steps:
  - ${{ if parameters.DockerDeploymentConfig.prepareScript }}:
    - pwsh: |
        ./${{ parameters.DockerDeploymentConfig.prepareScript }}
      displayName: "Run prep script"

  - task: Docker@2
    displayName: Build ${{ parameters.DockerDeploymentConfig.name }}:${{ parameters.ImageTag }}
    inputs:
      command: build
      Dockerfile: ${{ parameters.DockerDeploymentConfig.dockerFile }}
      tags: ${{ parameters.ImageTag }}
      arguments: '-t ${{ parameters.ContainerRegistry }}.azurecr.io/${{ parameters.DockerDeploymentConfig.dockerRepo }}:${{ parameters.ImageTag }}'

  - ${{ if parameters.publish }}:
    - task: Docker@2
      displayName: Push ${{ parameters.DockerDeploymentConfig.name }}:${{ parameters.ImageTag }}
      condition: and(succeeded(), ne(variables['Build.Reason'], 'PullRequest'))
      inputs:
        containerRegistry: ${{ parameters.ContainerRegistry }}
        repository: ${{ parameters.DockerDeploymentConfig.dockerRepo }}
        command: push
        tags: ${{ parameters.ImageTag }}

    - ${{ if parameters.DockerDeploymentConfig.stableTags }}:
      - ${{ each stableTag in parameters.DockerDeploymentConfig.stableTags }}:
        - task: Docker@2
          displayName: Build ${{ parameters.DockerDeploymentConfig.name }}:${{ stableTag }}
          inputs:
            command: build
            Dockerfile: ${{ parameters.DockerDeploymentConfig.dockerFile }}
            tags: ${{ stableTag }}
            arguments: '-t ${{ parameters.ContainerRegistry }}.azurecr.io/${{ parameters.DockerDeploymentConfig.dockerRepo }}:${{ stableTag }}'

        - task: Docker@2
          displayName: Push ${{ parameters.DockerDeploymentConfig.name }}:${{ stableTag }}
          condition: and(succeeded(), ne(variables['Build.Reason'], 'PullRequest'))
          inputs:
            containerRegistry: ${{ parameters.ContainerRegistry }}
            repository: ${{ parameters.DockerDeploymentConfig.dockerRepo }}
            command: push
            tags: ${{ stableTag }}