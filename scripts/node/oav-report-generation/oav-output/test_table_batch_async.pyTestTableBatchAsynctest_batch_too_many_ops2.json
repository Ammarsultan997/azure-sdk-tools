{
    "liveRequest": {
        "url": "https://fakeendpoint.table.core.windows.net/$batch?api-version=2019-02-02",
        "headers": {
            "Accept": "application/json",
            "Accept-Encoding": "gzip, deflate",
            "Authorization": "Sanitized",
            "Content-Length": "61830",
            "Content-Type": "multipart/mixed; boundary=batch_00000000-0000-0000-0000-000000000000",
            "DataServiceVersion": "3.0",
            "Date": "Thu, 18 Nov 2021 18:44:30 GMT",
            "MaxDataServiceVersion": "3.0;NetFx",
            "User-Agent": "azsdk-python-data-tables/12.2.1 Python/3.10.0 (Windows-10-10.0.22000-SP0)",
            "x-ms-client-request-id": "90abd4f7-489f-11ec-bb5b-c8348e51ab51",
            "x-ms-date": "Thu, 18 Nov 2021 18:44:30 GMT",
            "x-ms-version": "2019-02-02"
        },
        "body": "",
        "method": "POST"
    },
    "liveResponse": {
        "body": "LS1iYXRjaHJlc3BvbnNlXzAwMDAwMDAwLTAwMDAtMDAwMC0wMDAwLTAwMDAwMDAwMDAwMA0KQ29udGVudC1UeXBlOiBtdWx0aXBhcnQvbWl4ZWQ7IGJvdW5kYXJ5PWNoYW5nZXNldHJlc3BvbnNlXzg3ZDg3Y2I1LTk0YjAtNDZlZC04YTkwLTJlMWRkNTg5NWEyMA0KDQotLWNoYW5nZXNldHJlc3BvbnNlXzg3ZDg3Y2I1LTk0YjAtNDZlZC04YTkwLTJlMWRkNTg5NWEyMA0KQ29udGVudC1UeXBlOiBhcHBsaWNhdGlvbi9odHRwDQpDb250ZW50LVRyYW5zZmVyLUVuY29kaW5nOiBiaW5hcnkNCg0KSFRUUC8xLjEgNDAwIEJhZCBSZXF1ZXN0DQpYLUNvbnRlbnQtVHlwZS1PcHRpb25zOiBub3NuaWZmDQpDYWNoZS1Db250cm9sOiBuby1jYWNoZQ0KUHJlZmVyZW5jZS1BcHBsaWVkOiByZXR1cm4tbm8tY29udGVudA0KRGF0YVNlcnZpY2VWZXJzaW9uOiAzLjA7DQpDb250ZW50LVR5cGU6IGFwcGxpY2F0aW9uL2pzb247b2RhdGE9bWluaW1hbG1ldGFkYXRhO3N0cmVhbWluZz10cnVlO2NoYXJzZXQ9dXRmLTgNCg0KeyJvZGF0YS5lcnJvciI6eyJjb2RlIjoiSW52YWxpZElucHV0IiwibWVzc2FnZSI6eyJsYW5nIjoiZW4tVVMiLCJ2YWx1ZSI6Ijk5OlRoZSBiYXRjaCByZXF1ZXN0IG9wZXJhdGlvbiBleGNlZWRzIHRoZSBtYXhpbXVtIDEwMCBjaGFuZ2VzIHBlciBjaGFuZ2Ugc2V0LlxuUmVxdWVzdElkOjQzNzU5NDZiLWEwMDItMDAxMy03NWFjLWRjZDhjNDAwMDAwMFxuVGltZToyMDIxLTExLTE4VDE4OjQ0OjMwLjY2ODYyMDJaIn19fQ0KLS1jaGFuZ2VzZXRyZXNwb25zZV84N2Q4N2NiNS05NGIwLTQ2ZWQtOGE5MC0yZTFkZDU4OTVhMjAtLQ0KLS1iYXRjaHJlc3BvbnNlXzAwMDAwMDAwLTAwMDAtMDAwMC0wMDAwLTAwMDAwMDAwMDAwMC0tDQo=",
        "statusCode": "202",
        "headers": {
            "Cache-Control": "no-cache",
            "Content-Type": "multipart/mixed; boundary=batchresponse_00000000-0000-0000-0000-000000000000",
            "Date": "Thu, 18 Nov 2021 18:44:29 GMT",
            "Server": [
                "Windows-Azure-Table/1.0",
                "Microsoft-HTTPAPI/2.0"
            ],
            "Transfer-Encoding": "chunked",
            "X-Content-Type-Options": "nosniff",
            "x-ms-client-request-id": "90abd4f7-489f-11ec-bb5b-c8348e51ab51",
            "x-ms-request-id": "4375946b-a002-0013-75ac-dcd8c4000000",
            "x-ms-version": "2019-02-02"
        }
    }
}